name: Integration Tests
on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: ubuntu:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      consul:
        image: consul
        ports:
          - 8500:8500
      etcd:
        image: quay.io/coreos/etcd
        ports:
          - 2379:2379
        env:
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
      localstack:
        image: localstack/localstack
        ports:
          - 4566:4566
        env:
          SERVICES: dynamodb,ssm
      redis:
          image: redis
          # Set health checks to wait until redis has started
          options: >-
            --health-cmd "redis-cli ping"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      vault:
        image: vault
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: "super-secret-token"
      zookeeper:
        image: zookeeper
        ports:
          - 2181:2181
        env:
          ZOO_STANDALONE_ENABLED: true

    steps:
      - name: Install dependencies
        run: |
          apt-get -q update
          DEBIAN_FRONTEND="noninteractive" apt-get install -y git curl make redis-tools sudo awscli gnupg2 lsb-release etcd-client
          echo "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main" >> /etc/apt/sources.list
          curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
          apt-get -q update
          DEBIAN_FRONTEND="noninteractive" apt-get install -y vault

      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.4

      - name: Build and Install
        run: |
          make build
          sudo make install

      - name: Test Env
        run: |
          integration/env/test.sh
          integration/expect/check.sh

      - name: Test File
        run: |
          integration/file/test_yaml.sh
          integration/expect/check.sh
          integration/file/test_json.sh
          integration/expect/check.sh

      - name: Test Consul
        run: |
          integration/consul/test.sh
          integration/expect/check.sh
        env:
          CONSUL_HOST: consul
          CONSUL_PORT: 8500

      - name: Test etcd
        run: |
          integration/etcd/test.sh
          integration/expect/check.sh
        env:
          ETCD_ENDPOINT: "http://etcd:2379"

      - name: Test DynamoDB
        run: |
          integration/dynamodb/test.sh
          integration/expect/check.sh
        env:
          AWS_ACCESS_KEY_ID: "test"
          AWS_SECRET_ACCESS_KEY: "test"
          AWS_REGION: "us-east-1"
          AWS_DEFAULT_REGION: "us-east-1"
          DYNAMODB_LOCAL: 1
          DYNAMODB_ENDPOINT_URL: http://localstack:4566

      - name: Test Redis
        run: |
          integration/redis/test.sh
          integration/expect/check.sh
        env:
          REDIS_HOST: redis
          REDIS_PORT: 6379

      - name: Test SSM Parameter Store
        run: |
          integration/ssm/test.sh
          integration/expect/check.sh
        env:
          AWS_ACCESS_KEY_ID: "test"
          AWS_SECRET_ACCESS_KEY: "test"
          AWS_REGION: "us-east-1"
          AWS_DEFAULT_REGION: "us-east-1"
          SSM_LOCAL: "1"
          SSM_ENDPOINT_URL: "http://localstack:4566"

      - name: Test Vault
        run: |
          integration/vault-v1/test.sh
          integration/expect/check.sh
          integration/vault-v2/test.sh
          integration/expect/check.sh
          integration/vault-approle/test.sh
          integration/expect/check.sh
        env:
          VAULT_ADDR: http://vault:8200
          VAULT_TOKEN: "super-secret-token"

      - name: Test Zookeeper
        run: |
          integration/zookeeper/test.sh
          integration/expect/check.sh
        env:
          ZOOKEEPER_NODE: zookeeper